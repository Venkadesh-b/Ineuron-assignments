------------------------------------------------------------------------------------------------------------------------------------------------------
--CREATING DATABASE
------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE DATABASE JOINS;
USE JOINS;

------------------------------------------------------------------------------------------------------------------------------------------------------
--CREATING TABLES WITH PK AND FK
--INSERTING VALUES BOTH WITH CSV FILES AND INSERT STATEMENTS
------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE OR REPLACE TABLE BROKERS(
BROKER_ID VARCHAR(10) NOT NULL PRIMARY KEY,
BROKER_CODE VARCHAR(20),
BROKER_FULLNAME VARCHAR(50),
DISTRIBUTION_NETWORK VARCHAR(50),
COMISSION_SCHEME VARCHAR(50)
);

SELECT * FROM BROKERS;

CREATE OR REPLACE TABLE PRODUCTS(
PRODUCT_ID VARCHAR(10) NOT NULL PRIMARY KEY,
PRODUCT_CATEGORY VARCHAR(50),
PRODUCT_SUBCATEGORY VARCHAR(50),
PRODUCT VARCHAR(30));

CREATE OR REPLACE TABLE REGIONS(
ID VARCHAR(20) NOT NULL PRIMARY KEY,
NAME VARCHAR(50),
COUNTRY VARCHAR(100),
STATE_CODE VARCHAR(10) REFERENCES STATE_REGION(STATE_CODE),
STATE VARCHAR(50),
TYPE VARCHAR(50),   
LATITUDE VARCHAR(50),
LONGITUDE VARCHAR(50),
AREA_CODE VARCHAR(50),
POPULATION VARCHAR(50),
HOUSEHOLDS VARCHAR(50),
MEDIAN_INCOME VARCHAR(50),
LAND_AREA VARCHAR(50),
WATER_AREA VARCHAR(50),
TIME_ZONE VARCHAR(50));

describe table regions;

create or replace table CUSTOMERS(
CUSTOMER_ID VARCHAR(50) NOT NULL PRIMARY KEY,
LASTNAME VARCHAR(50),
FIRSTNAME VARCHAR(50),
BIRTHDATE VARCHAR(50),
GENDER VARCHAR(50),
PARTICIPANT_TYPE VARCHAR(50),
REGION_ID VARCHAR(20) REFERENCES REGIONS(ID),
MARITAL_STATUS VARCHAR(50));

CREATE OR REPLACE TABLE STATE_REGION(
STATE_CODE VARCHAR(10) NOT NULL PRIMARY KEY,
STATE VARCHAR(50),
REGION VARCHAR(50));
SELECT * FROM STATE_REGION;

CREATE OR REPLACE TABLE PRIORITY(
ID VARCHAR(10) NOT NULL PRIMARY KEY,
DESCRIPTION VARCHAR(50));


CREATE OR REPLACE TABLE STATUSES(
ID VARCHAR(10) NOT NULL PRIMARY KEY,
DESCRIPTION VARCHAR(50));

INSERT INTO PRIORITY(ID,DESCRIPTION) VALUES 
('1','Urgent'),
('2','Non Urgent');

INSERT INTO STATUSES(ID,DESCRIPTION) VALUES 
('1','Outstanding'),
('2','New'),
('3','In Progress'),
('4','Assigned to'),
('5','Resolved'),
('6','Pending'),
('9','Closed');

CREATE OR REPLACE TABLE CATEGORIES(
ID VARCHAR(10) NOT NULL PRIMARY KEY,
DESCRIPTION VARCHAR(150),
ACTIVE VARCHAR(10));


CREATE OR REPLACE TABLE SOURCES(
ID VARCHAR(10) NOT NULL PRIMARY KEY,
DESCRIPTION VARCHAR(50));

INSERT INTO sources(ID,DESCRIPTION) VALUES 
('1','Bank Branch'),
('2','Tele'),
('3','Bank HQ'),
('4','Partner'),
('5','Company HQ'),
('6','Intermediary'),
('7','CRO'),
('8','Call Center'),
('9','Bank Small Business');

CREATE OR REPLACE TABLE TYPES(
ID VARCHAR(10) NOT NULL PRIMARY KEY,
DESCRIPTION VARCHAR(50));

INSERT INTO types(ID,DESCRIPTION) VALUES 
('1','Court'),
('2','In Person'),
('3','Written'),
('4','Court Order'),
('5','Email'),
('6','Fax'),
('7','Phone'),
('8','Call Center'),
('9','Partner / Bank'),
('99','Other');

CREATE OR REPLACE TABLE COMPLAINT_DATA(
ID VARCHAR(10) NOT NULL PRIMARY KEY,
COMPLAIN_dATE VARCHAR(50),
COMPLETION_DATA VARCHAR(50),
CUSTOMER_ID VARCHAR(50) REFERENCES CUSTOMERS(CUSTOMER_ID),
BROKER_ID VARCHAR(10) REFERENCES BROKERS(BROKER_ID),
PRODUCT_ID VARCHAR(10) REFERENCES PRODUCTS(PRODUCT_ID),
COMPLAIN_PRIORITY_ID VARCHAR(10) REFERENCES PRIORITY(ID),
COMPLAIN_TYPEID VARCHAR(10) REFERENCES TYPES(ID),
COMPLAIN_SOURCEID VARCHAR(10) REFERENCES SOURCES(ID),
COMPLAIN_CATEGORYID VARCHAR(10) REFERENCES CATEGORIES(ID),
COMPLAIN_STATUSID VARCHAR(10) REFERENCES STATUSES(ID),
ADMINISTRATOR_ID VARCHAR(10),
CLIENT_SATISFACTION VARCHAR(10),
EXPECTED_REIMBURESEMENT VARCHAR(10));


CREATE OR REPLACE TABLE STATUS_HISTORY(
ID VARCHAR(10) NOT NULL PRIMARY KEY,
COMPLAIN_ID VARCHAR(10) REFERENCES COMPLAINT_DATA(ID),
COMPLAIN_STATUS VARCHAR(10) REFERENCES STATUSES(ID),
STATUS_DATE VARCHAR(20));

--DELETE FROM STATUS_HISTORY WHERE COMPLAIN_ID IS NULL;

SELECT * FROM STATUS_HISTORY;

------------------------------------------------------------------------------------------------------------------------------------------------------
--JOINING TABLE TO CREATE MASTER TABLE (MULTIPLE JOINS)
------------------------------------------------------------------------------------------------------------------------------------------------------

/*
SELECT COM.*,BRO.*,CUST.CUSTOMER_ID AS CUST_ID,CUST.LASTNAME,
CUST.FIRSTNAME,CUST.BIRTHDATE,CUST.GENDER,
CUST.PARTICIPANT_tYPE,CUST.REGION_ID,CUST.MARITAL_STATUS,
CAT.*,PRI.*,PRO.*,REG.*,SOU.*,STA.*,STS.*,STSH.*,TYP.*
FROM COMPLAINT_DATA AS COM 
LEFT OUTER JOIN BROKERS AS BRO ON COM.BROKER_ID = BRO.BROKER_ID
LEFT OUTER JOIN CATEGORIES AS CAT ON COM.COMPLAIN_CATEGORYID = CAT.ID
LEFT OUTER JOIN CUSTOMERS AS CUST ON COM.CUSTOMER_ID = CUST.CUSTOMER_ID
LEFT OUTER JOIN PRIORITY AS PRI ON COM.COMPLAIN_PRIORITY_ID = PRI.ID
LEFT OUTER JOIN PRODUCTS AS PRO ON COM.PRODUCT_ID = PRO.PRODUCT_ID
LEFT OUTER JOIN REGIONS AS REG ON CUST.REGION_ID = REG.ID
LEFT OUTER JOIN SOURCES AS SOU ON COM.COMPLAIN_SOURCEID = SOU.ID
LEFT OUTER JOIN STATE_REGION AS STA ON REG.STATE_CODE = STA.STATE_CODE
LEFT OUTER JOIN STATUSES AS STS ON COM.COMPLAIN_STATUSID = STS.ID
LEFT OUTER JOIN STATUS_HISTORY AS STSH ON COM.ID = STSH.COMPLAIN_ID
LEFT OUTER JOIN TYPES AS TYP ON COM.COMPLAIN_TYPEID = TYP.ID;
*/


CREATE OR REPLACE TABLE MASTER_TABLE AS
SELECT COM.*,BRO.BROKER_CODE,BRO.BROKER_FULLNAME,BRO.DISTRIBUTION_NETWORK,
BRO.COMISSION_SCHEME,CUST.CUSTOMER_ID AS CUST_ID,CUST.LASTNAME,
CUST.FIRSTNAME,CUST.BIRTHDATE,CUST.GENDER,
CUST.PARTICIPANT_tYPE,CUST.REGION_ID,CUST.MARITAL_STATUS,
CAT.DESCRIPTION AS "CATEGORY_DESCRIPTION",CAT.ACTIVE,PRI.DESCRIPTION,PRO.PRODUCT_CATEGORY,PRO.PRODUCT_SUBCATEGORY,
PRO.PRODUCT,REG.NAME,REG.COUNTRY,REG.STATE_CODE,REG.STATE,REG.TYPE,
REG.LATITUDE,REG.LONGITUDE,REG.AREA_CODE,REG.POPULATION,REG.HOUSEHOLDS,REG.MEDIAN_INCOME,
REG.LAND_AREA,REG.WATER_AREA,REG.TIME_ZONE,SOU.DESCRIPTION AS "SOURCE",STS.DESCRIPTION AS "STATUS",STSH.STATUS_DATE,
TYP.DESCRIPTION AS "TYPE_OF_SUBMISSION"
FROM COMPLAINT_DATA AS COM 
LEFT OUTER JOIN BROKERS AS BRO ON BRO.BROKER_ID = COM.BROKER_ID 
LEFT OUTER JOIN CATEGORIES AS CAT ON CAT.ID = COM.COMPLAIN_CATEGORYID
LEFT OUTER JOIN CUSTOMERS AS CUST ON CUST.CUSTOMER_ID = COM.CUSTOMER_ID
LEFT OUTER JOIN PRIORITY AS PRI ON PRI.ID = COM.COMPLAIN_PRIORITY_ID 
LEFT OUTER JOIN PRODUCTS AS PRO ON PRO.PRODUCT_ID = COM.PRODUCT_ID 
LEFT OUTER JOIN REGIONS AS REG ON REG.ID = CUST.REGION_ID
LEFT OUTER JOIN SOURCES AS SOU ON SOU.ID = COM.COMPLAIN_SOURCEID
LEFT OUTER JOIN STATE_REGION AS STA ON STA.STATE_CODE = REG.STATE_CODE
LEFT OUTER JOIN STATUSES AS STS ON STS.ID = COM.COMPLAIN_STATUSID
LEFT OUTER JOIN STATUS_HISTORY AS STSH ON STSH.COMPLAIN_ID = COM.ID
LEFT OUTER JOIN TYPES AS TYP ON TYP.ID = COM.COMPLAIN_TYPEID
;

SELECT * FROM MASTER_TABLE;
